<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>光之微</title>
  
  <subtitle>迎接光的洗礼</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-09-16T06:58:08.043Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>OCCJ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂题结论</title>
    <link href="http://example.com/undefined/f1b6fc8a.html"/>
    <id>http://example.com/undefined/f1b6fc8a.html</id>
    <published>2023-09-16T06:49:45.000Z</published>
    <updated>2023-09-16T06:58:08.043Z</updated>
    
    <content type="html"><![CDATA[<h1>1.[a,b]的奇数之和</h1><h2 id="1-2k-1-的奇数之和：k-2">[1,2k-1]的奇数之和：k^2</h2><h2 id><img src="/undefined/f1b6fc8a.htm/D:%5CBlog%5Csource_posts%5C%E6%9D%82%E9%A2%98%E7%BB%93%E8%AE%BA%5C111.png" alt="111"></h2><h1>((b+1)/2)<em>((b+1)/2)-(a/2)</em>(a/2)</h1><h1>2.[a,b]的偶数之和：</h1><h2 id="1-2k-的偶数和">[1,2k]的偶数和</h2><h2 id="k-k-2">k+k^2</h2><p>：(b/2-(a-1)/2)+(b/2)<em>(b/2)-((a-1)/2)</em>((a-1)/2)</p><h1>3.八进制十进制小数</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">char</span> d[N] ;  <span class="comment">//八进制数</span></span><br><span class="line"><span class="type">int</span> ans[N] ;  <span class="comment">//十进制数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;d)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="built_in">sizeof</span>(ans));  <span class="comment">//每组数据都必须先初始化ans[] </span></span><br><span class="line">        <span class="type">int</span> d2;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">strlen</span>(d);       <span class="comment">//记录小数的位数 </span></span><br><span class="line">        <span class="type">int</span> t = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = len - <span class="number">1</span> ; i &gt; <span class="number">1</span> ; i--)&#123;</span><br><span class="line">            d2 = d[i] - <span class="string">&#x27;0&#x27;</span> ;     <span class="comment">//d2来接收小数的每一位的数 </span></span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span> , j = <span class="number">0</span> ;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;t || d2)&#123;    <span class="comment">//此循环内语句为数组模拟除法计算 </span></span><br><span class="line">                d2 = d2*<span class="number">10</span> + ans[j++]; </span><br><span class="line">                ans[k++] = d2/<span class="number">8</span> ;</span><br><span class="line">                d2 %= <span class="number">8</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            t = k;     <span class="comment">//记录最后的得到的位数 </span></span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;d&lt;&lt;<span class="string">&quot; [8] = 0.&quot;</span> ;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; t ; i++)</span><br><span class="line">            cout&lt;&lt;ans[i];</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot; [10]&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>十进制转R进制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> digits[] = <span class="string">&quot;0123456789ABCDEF&quot;</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 32</span></span><br><span class="line"><span class="type">char</span> ans[N + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, r;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span> (<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;r)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(r==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>) &#123;<span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>); n = -n;&#125;</span><br><span class="line">        <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n) ans[i++] = digits[n % r], n /= r;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) ans[i++] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 输出结果 */</span></span><br><span class="line">        <span class="keyword">while</span> (--i &gt;= <span class="number">0</span>) <span class="built_in">putchar</span>(ans[i]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A转B</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> <span class="title function_">convert</span><span class="params">(<span class="type">int</span> a, <span class="built_in">string</span>&amp; s, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">long</span> val, dcount, digit;</span><br><span class="line">    <span class="type">char</span> result[<span class="number">72</span>], c;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line"> </span><br><span class="line">    val = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;(<span class="type">int</span>)s.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))</span><br><span class="line">            val = val * a + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            val = val * a + <span class="built_in">toupper</span>(s[i]) - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dcount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(val) &#123;</span><br><span class="line">        digit = val % b;</span><br><span class="line">        val /= b;</span><br><span class="line">        result[dcount++] = ((digit &gt;= <span class="number">10</span>) ? <span class="string">&#x27;A&#x27;</span> - <span class="number">10</span> : <span class="string">&#x27;0&#x27;</span>) + digit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dcount == <span class="number">0</span>) &#123;</span><br><span class="line">        result[dcount++] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        result[dcount] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        result[dcount] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>, j=dcount<span class="number">-1</span>; i&lt;j; i++, j--) &#123;</span><br><span class="line">        c = result[i];</span><br><span class="line">        result[i] = result[j];</span><br><span class="line">        result[j] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = result;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; s &gt;&gt; b;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; convert(a, s, b) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2转16位数爆longlong</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Bailian2798 2进制转化为16进制 */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="meta">#include &lt;string.h&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N2 4</span></span><br><span class="line"><span class="built_in">char</span> s[N + N2 + <span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line"><span class="built_in">char</span> convert[] = <span class="string">&quot;0123456789ABCDEF&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>(<span class="params"><span class="keyword">void</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> n, len, digits, i, k;</span><br><span class="line"> </span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        gets(s + N2);</span><br><span class="line"> </span><br><span class="line">        s[<span class="number">0</span>] = s[<span class="number">1</span>] = s[<span class="number">2</span>] = s[<span class="number">3</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        len = strlen(s + N2);               <span class="comment">/* 2进制位数 */</span></span><br><span class="line">        digits = (len + N2 - <span class="number">1</span>) / N2;   <span class="comment">/* 16进制位数 */</span></span><br><span class="line">        len += N2 - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>, k=len; i&lt;=digits; i++) &#123;</span><br><span class="line">            s[k--] = convert[(s[len - <span class="number">3</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">8</span> + (s[len - <span class="number">2</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">4</span> + (s[len - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">2</span> + (s[len] - <span class="string">&#x27;0&#x27;</span>)];</span><br><span class="line">            len -= N2;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        printf(<span class="string">&quot;%s\n&quot;</span>, &amp;s[k + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.大小写转换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">大写变小写、小写变大写 : 字符 ^= <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">大写变小写、小写变小写 : 字符 |= <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">小写变大写、大写变大写 : 字符 &amp;= <span class="number">-33</span>;</span><br><span class="line">a-z：<span class="number">97</span><span class="number">-122</span></span><br><span class="line">A-Z：<span class="number">65</span><span class="number">-90</span></span><br><span class="line"><span class="number">0</span><span class="number">-9</span>：<span class="number">48</span><span class="number">-57</span></span><br></pre></td></tr></table></figure><ol start="5"><li class="lvl-3"></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="type">int</span> t = x;</span><br><span class="line">    <span class="type">int</span> value = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x / <span class="number">10</span>)&#123;</span><br><span class="line">        value = <span class="number">10</span> * value + x % <span class="number">10</span>;</span><br><span class="line">        x /=  <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(value*<span class="number">10</span> + x == t) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;判断回文数字</span><br><span class="line">  <span class="comment">/*幻方*/</span> <span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> <span class="type">int</span> n,a[<span class="number">40</span>][<span class="number">40</span>],x,y;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    x=<span class="number">1</span>,y=(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n*n;i++)&#123;</span><br><span class="line">        a[x][y]=i;</span><br><span class="line">        <span class="keyword">if</span>(!a[(x<span class="number">-2</span>+n)%n+<span class="number">1</span>][y%n+<span class="number">1</span>]) x=(x<span class="number">-2</span>+n)%n+<span class="number">1</span>,y=y%n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> x=x%n+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;cout&lt;&lt;a[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;&#125;</span><br><span class="line">        cout&lt;&lt;endl;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1.[a,b]的奇数之和&lt;/h1&gt;
&lt;h2 id=&quot;1-2k-1-的奇数之和：k-2&quot;&gt;[1,2k-1]的奇数之和：k^2&lt;/h2&gt;
&lt;h2 id&gt;&lt;img src=&quot;/undefined/f1b6fc8a.htm/D:%5CBlog%5Csource_posts%5C%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>序列式容器</title>
    <link href="http://example.com/undefined/1ae3852a.html"/>
    <id>http://example.com/undefined/1ae3852a.html</id>
    <published>2023-09-12T05:50:18.000Z</published>
    <updated>2023-09-12T14:35:43.949Z</updated>
    
    
    
    
    <category term="STL" scheme="http://example.com/categories/STL/"/>
    
    
    <category term="STL" scheme="http://example.com/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>STL简介</title>
    <link href="http://example.com/undefined/6d927e9f.html"/>
    <id>http://example.com/undefined/6d927e9f.html</id>
    <published>2023-09-11T12:07:01.000Z</published>
    <updated>2023-09-11T13:11:44.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="STL简介">STL简介</h2><h3 id="⭐STL的组成：">⭐STL的组成：</h3><ul class="lvl-0"><li class="lvl-2"><h4 id="容器（container）">容器（container）</h4></li><li class="lvl-2"><h4 id="迭代器（iterator）这个概念很重要">迭代器（iterator）这个概念很重要</h4></li><li class="lvl-2"><h4 id="算法（algorithm）">算法（algorithm）</h4></li><li class="lvl-2"><h4 id="仿函数（function-object）">仿函数（function object）</h4></li><li class="lvl-2"><h4 id="适配器（adaptor">适配器（adaptor)</h4></li><li class="lvl-2"><h4 id="空间配置器（allocator">空间配置器（allocator)</h4><p>本博客主要讲讲容器和算法还有一些迭代器的知识。另外三个我也不是很理解，共同进步。</p><h3 id="🌟容器：顾名思义是放东西的">🌟容器：顾名思义是放东西的</h3><h4 id="主要是：序列式容器（Sequence-container）、关联式容器（associated-container）、容器适配器（container-adaptor）">主要是：序列式容器（Sequence container）、关联式容器（associated container）、容器适配器（container adaptor）</h4><ul class="lvl-2"><li class="lvl-4"><h5 id="序列式容器：每个元素都有固定位置，取决于插入时间和地点，和值没有关系。（如vector、deque，list）">序列式容器：每个元素都有固定位置，取决于插入时间和地点，和值没有关系。（如vector、deque，list）</h5></li><li class="lvl-4"><h5 id="关联式容器：元素位置取决于特定的排序原则，和插入顺序无关。（如map、set、multiset，multimap）">关联式容器：元素位置取决于特定的排序原则，和插入顺序无关。（如map、set、multiset，multimap）</h5></li><li class="lvl-4"><h5 id="容器适配器：包括stack、queue。">容器适配器：包括stack、queue。</h5><h3 id="⭐算法：一些封装函数直接使用">⭐算法：一些封装函数直接使用</h3><h4 id="比如sort，mergesort，heapsort进行排序；max-element-min-element是元素值大最大最小；去掉重复数字的unique；元素反转的reverse等很多很多。">比如sort，mergesort，heapsort进行排序；max_element,min_element是元素值大最大最小；去掉重复数字的unique；元素反转的reverse等很多很多。</h4><h3 id="🌟迭代器：STL使用迭代器来表示数据位置，可以简单认为是容器的指针，后面又更具体的介绍。">🌟迭代器：STL使用迭代器来表示数据位置，可以简单认为是容器的指针，后面又更具体的介绍。</h3></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;STL简介&quot;&gt;STL简介&lt;/h2&gt;
&lt;h3 id=&quot;⭐STL的组成：&quot;&gt;⭐STL的组成：&lt;/h3&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;h4 id=&quot;容器（container）&quot;&gt;容器（container）&lt;/h4&gt;
&lt;/</summary>
      
    
    
    
    <category term="STL" scheme="http://example.com/categories/STL/"/>
    
    
    <category term="STL" scheme="http://example.com/tags/STL/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分解质因数</title>
    <link href="http://example.com/undefined/ece2ea76.html"/>
    <id>http://example.com/undefined/ece2ea76.html</id>
    <published>2023-09-07T08:47:30.000Z</published>
    <updated>2023-09-11T13:12:24.739Z</updated>
    
    <content type="html"><![CDATA[<h1>分解质因数</h1><p>：</p><p>算术基本定理：</p><p>算术基本定理可表述为：任何一个大于1的自然数 N,如果N不为质数，那么N可以唯一分解成有限个质数的乘积。</p><h3 id="结论一">结论一</h3><p>首先根据 <strong>算术基本定理</strong> 可以知道，一个合数可以由多个比他小的质数相乘而得，而这些质数就是他的质因数。</p><p>并且，例如一个数 x是 n 的因数，并且是合数，那么问一个问题。是否存在一个质数是 x 的质因数，而不是 n 的质因数？答案是不可能的哈</p><p>证明：</p><blockquote><p>很明显 因为 n/x = k，那么 x 的质因数组成 x 的时候只要再乘以 k 就可以得到 n，因此可以得出一个结论：<strong>n 的因数的质因数，肯定也是 n 的质因数</strong>。</p></blockquote><h3 id="结论二"><strong>结论二</strong></h3><p>那么能不能得到一个结论就是，<strong>n 的任何一个因数 x假如他是合数，那么他绝对可以由 n 的小于x的质因数所相乘而得</strong></p><p>答案是可以的哈</p><p>证明：</p><blockquote><p>根据上面的结论推导一下就可以了。n 的因数如果是合数，那么他绝对可以由比他小的质因数组合而成，同时这些质因数是 n 的质因数，那么不就可以得到上面问题的结论。</p></blockquote><h3 id="结论三">结论三</h3><p>因此最后我们又可以得到一条结论：<strong>一个数的因数，如果排序的话，最开始的因数肯定是质因数，后面才有合数</strong>。</p><p>可不可以这么推论呢？可以的。</p><p>证明：</p><blockquote><p>还是根据第一条理论。假如n 的因数除了 1 之外第一个因数是合数，那么他绝对可以由一些质因数组合而成，那么这些数是比他小的，且是 n 的质因数，因此，这些数也是 n 的因数，并且是质数。</p></blockquote><h3 id="结论四">结论四</h3><p>**数 x 是数 n 的因数，且是合数，那么 n 的质因数不一定是 x 的质因数，而 x 的 质因数一定是 n 的质因数。**因此当将 n 的所有比x 小的质因数都除尽的时候，因此当 i 为 x 的时候自然是无法进行整除的。</p><p>因此现在可以证明，从小到大遍历数 n 的因数，并且每次都除尽的话，那么只会遍历到数 n 的质因数，而不会是合数</p><p>最后可以得出，每次<code>if(n%i==0)</code> 成立的时候 i 一定是 n 的质因数。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;分解质因数&lt;/h1&gt;
&lt;p&gt;：&lt;/p&gt;
&lt;p&gt;算术基本定理：&lt;/p&gt;
&lt;p&gt;算术基本定理可表述为：任何一个大于1的自然数 N,如果N不为质数，那么N可以唯一分解成有限个质数的乘积。&lt;/p&gt;
&lt;h3 id=&quot;结论一&quot;&gt;结论一&lt;/h3&gt;
&lt;p&gt;首先根据 &lt;strong&gt;算术基</summary>
      
    
    
    
    
    <category term="数论" scheme="http://example.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
</feed>
